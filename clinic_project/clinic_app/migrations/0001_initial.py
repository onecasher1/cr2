# Generated by Django 5.2.1 on 2025-05-29 11:33

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название специализации')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Специализация врача',
                'verbose_name_plural': 'Специализации врачей',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, max_length=100, verbose_name='Отчество')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='doctors_photos/', verbose_name='Фото')),
                ('experience_years', models.PositiveIntegerField(default=0, verbose_name='Стаж (лет)')),
                ('contact_phone', models.CharField(blank=True, max_length=20, verbose_name='Контактный телефон')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('room_number', models.CharField(blank=True, max_length=50, verbose_name='Номер кабинета')),
                ('bio', models.TextField(blank=True, verbose_name='Краткая биография/О себе')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен (работает)')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Аккаунт пользователя (если есть)')),
                ('specialization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='doctors', to='clinic_app.specialization', verbose_name='Специализация')),
            ],
            options={
                'verbose_name': 'Врач',
                'verbose_name_plural': 'Врачи',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_datetime', models.DateTimeField(verbose_name='Дата и время приема')),
                ('reason_for_visit', models.CharField(blank=True, max_length=255, verbose_name='Причина визита (кратко)')),
                ('detailed_reason', models.TextField(blank=True, verbose_name='Подробная причина визита/Жалобы')),
                ('status', models.CharField(choices=[('scheduled', 'Запланирован'), ('completed', 'Завершен'), ('cancelled_by_patient', 'Отменен пациентом'), ('cancelled_by_clinic', 'Отменен клиникой'), ('no_show', 'Неявка')], default='scheduled', max_length=30, verbose_name='Статус приема')),
                ('doctor_notes', models.TextField(blank=True, verbose_name='Заметки врача по приему')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата последнего изменения')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='clinic_app.doctor', verbose_name='Врач')),
            ],
            options={
                'verbose_name': 'Запись на прием',
                'verbose_name_plural': 'Записи на прием',
                'ordering': ['-appointment_datetime'],
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, max_length=100, verbose_name='Отчество')),
                ('date_of_birth', models.DateField(verbose_name='Дата рождения')),
                ('address', models.TextField(blank=True, verbose_name='Адрес проживания')),
                ('contact_phone', models.CharField(max_length=20, verbose_name='Контактный телефон')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Email')),
                ('insurance_policy_number', models.CharField(blank=True, max_length=100, verbose_name='Номер страхового полиса')),
                ('registration_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('notes', models.TextField(blank=True, verbose_name='Заметки о пациенте')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Аккаунт пользователя (если есть)')),
            ],
            options={
                'verbose_name': 'Пациент',
                'verbose_name_plural': 'Пациенты',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='MedicalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_date', models.DateField(default=django.utils.timezone.now, verbose_name='Дата записи')),
                ('diagnosis', models.TextField(blank=True, verbose_name='Диагноз')),
                ('complaints', models.TextField(blank=True, verbose_name='Жалобы')),
                ('examination_data', models.TextField(blank=True, verbose_name='Данные осмотра')),
                ('treatment_plan', models.TextField(blank=True, verbose_name='План лечения')),
                ('recommendations', models.TextField(blank=True, verbose_name='Рекомендации')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания мед. записи')),
                ('appointment', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='clinic_app.appointment', verbose_name='Связанный прием')),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='clinic_app.doctor', verbose_name='Лечащий врач (создавший запись)')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_records', to='clinic_app.patient', verbose_name='Пациент')),
            ],
            options={
                'verbose_name': 'Медицинская запись',
                'verbose_name_plural': 'Медицинские записи',
                'ordering': ['-record_date', '-created_at'],
            },
        ),
        migrations.AddField(
            model_name='appointment',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='clinic_app.patient', verbose_name='Пациент'),
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Наименование услуги')),
                ('code', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Код услуги')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Стоимость')),
                ('description', models.TextField(blank=True, verbose_name='Описание услуги')),
                ('duration_minutes', models.PositiveIntegerField(blank=True, null=True, verbose_name='Примерная длительность (мин)')),
                ('specializations', models.ManyToManyField(blank=True, related_name='services', to='clinic_app.specialization', verbose_name='Требуемые специализации врачей')),
            ],
            options={
                'verbose_name': 'Услуга',
                'verbose_name_plural': 'Услуги клиники',
                'ordering': ['name'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='appointment',
            unique_together={('doctor', 'appointment_datetime')},
        ),
    ]
